[{"/Users/jeff/Desktop/learning/random-hooks/random-hooks/src/index.tsx":"1","/Users/jeff/Desktop/learning/random-hooks/random-hooks/src/App.tsx":"2","/Users/jeff/Desktop/learning/random-hooks/random-hooks/src/random-user.tsx":"3","/Users/jeff/Desktop/learning/random-hooks/random-hooks/src/Home.tsx":"4","/Users/jeff/Desktop/learning/random-hooks/random-hooks/src/head.tsx":"5","/Users/jeff/Desktop/learning/random-hooks/random-hooks/src/star.tsx":"6","/Users/jeff/Desktop/learning/random-hooks/random-hooks/src/star-review.tsx":"7","/Users/jeff/Desktop/learning/random-hooks/random-hooks/src/reference.tsx":"8"},{"size":177,"mtime":1611356330727,"results":"9","hashOfConfig":"10"},{"size":700,"mtime":1611386787965,"results":"11","hashOfConfig":"10"},{"size":1748,"mtime":1611000012097,"results":"12","hashOfConfig":"10"},{"size":230,"mtime":1611000709244,"results":"13","hashOfConfig":"10"},{"size":1302,"mtime":1611205433617,"results":"14","hashOfConfig":"10"},{"size":1578,"mtime":1611260812889,"results":"15","hashOfConfig":"10"},{"size":1789,"mtime":1611260750582,"results":"16","hashOfConfig":"10"},{"size":2290,"mtime":1611386799346,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1telul3",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jeff/Desktop/learning/random-hooks/random-hooks/src/index.tsx",[],["36","37"],"/Users/jeff/Desktop/learning/random-hooks/random-hooks/src/App.tsx",[],"/Users/jeff/Desktop/learning/random-hooks/random-hooks/src/random-user.tsx",["38","39"],"import React, { useState, useEffect } from 'react';\n\ninterface UserName {\n  first: string,\n  last: string,\n  title: string\n}\n\ninterface UserPic {\n  large: string,\n  medium: string,\n  thumbnail: string\n}\n\ninterface UserInfo {\n  name: UserName,\n  picture: UserPic,\n  email: string\n}\n\nexport default function RandomUser() {\n\n  const [randomUser, setRandomUser] = useState<UserInfo[]>([]);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  async function getUsersData () {\n    const res = await fetch(`https://randomuser.me/api/?page${pageNumber}`);\n    const jsonData = await res.json();\n    if (!jsonData) {return}\n    const newUsers = [...randomUser, ...jsonData.results]\n    setRandomUser(newUsers);\n  }\n  \n  useEffect(() => {\n    getUsersData();\n  }, [])\n\n  useEffect(() => {\n    getUsersData();\n  }, [pageNumber])\n  \n  const users = randomUser.map((userInfo: UserInfo, idx: number) => {\n    const name = userInfo.name  \n    return (\n        <div key={idx} className=\"card\" style={{width: \"12rem\"}}>\n          <img src={userInfo.picture.large} className=\"card-img-top\" alt={userInfo.picture.large}/>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{`${name.title} ${name.first} ${name.last}`}</h5>\n            <p className=\"card-text\">{userInfo.email}</p>\n          </div>\n        </div>\n      )\n    })\n\n\n  return (\n      <div className=\"App container-md\">\n        <button \n          type=\"button\" \n          className=\"btn btn-primary fixed-bottom\" \n          style={{right: \"0.5rem\", left: \"unset\"}} \n          onClick={() => setPageNumber(pageNumber + 1)}\n        >\n          Show more people\n        </button>\n        <div className=\"d-flex flex-wrap justify-content-between\">{users}</div>\n      </div>\n  );\n}\n","/Users/jeff/Desktop/learning/random-hooks/random-hooks/src/Home.tsx",[],"/Users/jeff/Desktop/learning/random-hooks/random-hooks/src/head.tsx",[],"/Users/jeff/Desktop/learning/random-hooks/random-hooks/src/star.tsx",[],"/Users/jeff/Desktop/learning/random-hooks/random-hooks/src/star-review.tsx",[],"/Users/jeff/Desktop/learning/random-hooks/random-hooks/src/reference.tsx",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":36,"column":6,"nodeType":"46","endLine":36,"endColumn":8,"suggestions":"47"},{"ruleId":"44","severity":1,"message":"45","line":40,"column":6,"nodeType":"46","endLine":40,"endColumn":18,"suggestions":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUsersData'. Either include it or remove the dependency array.","ArrayExpression",["51"],["52"],"no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},{"desc":"55","fix":"56"},"Update the dependencies array to be: [getUsersData]",{"range":"57","text":"58"},"Update the dependencies array to be: [getUsersData, pageNumber]",{"range":"59","text":"60"},[756,758],"[getUsersData]",[806,818],"[getUsersData, pageNumber]"]